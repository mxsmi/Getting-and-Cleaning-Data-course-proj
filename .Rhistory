setwd("~/GitHub/Getting-and-Cleaning-Data-course-proj")
library(ProjectTemplate)
create.project(template = "minimal")
?read.delim
test_labels = read.delim("y_test.txt", sep = "\n")
test_labels = read.delim("test/y_test.txt", sep = "\n")
View(test_labels)
dim(test_labels)
table(test_labels$X5)
test_labels = read.delim("test/y_test.txt", sep = "\n", col.names = c("activity_label"))
subject_test = read.delim("test/subject_test.txt", col.names = c("subject"), sep = "\n")
View(subject_test)
table(subject_test$subject)
dim(subject_test)
library(dplyr)
activities = read.delim("activity_labels.txt", sep = "\n",
col.names = c("activity_num", "activity_lable"))
activities = read.delim("activity_labels.txt", sep = "\s",
activities = read.delim("activity_labels.txt", sep = " ",
col.names = c("activity_num", "activity_lable"))
View(activities)
activities = read.delim("activity_labels.txt", sep = " ",
col.names = c("activity_num", "activity_label"))
activities$activity_label = tolower(activities$activity_label)
test_labels = read.delim("test/y_test.txt", sep = "\n", col.names = c("activity_num"))
subject_test = read.delim("test/subject_test.txt", col.names = c("subject"), sep = "\n")
data = left_join(test_labels, activities, by = activity_num)
data = left_join(test_labels, activities, by = join_by(activity_num))
View(data)
activities = read.delim("activity_labels.txt", sep = "\n")
activities = read.table("activity_labels.txt")
activities = read.table("activity_labels.txt", col.names = c("activity_num", "activity_label"))
activities$activity_label = tolower(activities$activity_label)
test_labels = read.table("test/y_test.txt", col.names = c("activity_num"))
data = left_join(test_labels, activities, by = join_by(activity_num))
View(data)
subject_test = read.table("test/subject_test.txt", col.names = c("subject"))
data = cbind(data, subject_test)
library(dplyr)
activities = read.table("activity_labels.txt", col.names = c("activity_num", "activity_label"))
activities$activity_label = tolower(activities$activity_label)
test_labels = read.table("test/y_test.txt", col.names = c("activity_num"))
data = left_join(test_labels, activities, by = join_by(activity_num))
subject_test = read.table("test/subject_test.txt", col.names = c("subject"))
data = cbind(subject_test, data)
any(is.na(data))
# Load libraries
library(dplyr)
## Load in the test data
activities = read.table("activity_labels.txt", col.names = c("activity_num", "activity_label"))
test_labels = read.table("test/y_test.txt", col.names = c("activity_num"))
subject_test = read.table("test/subject_test.txt", col.names = c("subject"))
## clean data
activities$activity_label = tolower(activities$activity_label)
## combine data into single dataframe
data = left_join(test_labels, activities, by = join_by(activity_num))
data = cbind(subject_test, data)
any(is.na(data))
test_data = read.table("test/X_test.txt")
View(test_data)
dim(test_data)
features = read.table("features.txt")
View(features)
features = read.table("features.txt", col.names = c("feature_num", "feature_label"))
ncol(test_data)
colnames(test_data) = features$feature_label
data = cbind(data, test_data)
body_acc_x_test = read.table("test/Inertial Signals/body_acc_x_test.txt")
View(body_acc_x_test)
564 - 3
561/128
?pivot_longer
??pivot_longer
library(tidyr)
?pivot_longer
View(test_data)
p = test_data %>% pivot_longer(cols = c(`tBodyAcc-mean()-X`, `tBodyAcc-mean()-Y`, `tBodyAcc-mean()-Z`), names_to = c("X", "Y", "Z"), values_to = "tBodyAcc-mean()")
p = test_data %>% pivot_longer(cols = c(`tBodyAcc-mean()-X`, `tBodyAcc-mean()-Y`, `tBodyAcc-mean()-Z`), values_to = "tBodyAcc-mean()")
View(p)
## Load libraries
library(dplyr)
library(tidyr)
library(stringr)
## Load in activities and feature data
activities = read.table("activity_labels.txt", col.names = c("activity_num", "activity_label"))
View(activities)
features = read.table("features.txt", col.names = c("feature_num", "feature_label"))
View(features)
## load in test data
test_labels = read.table("test/y_test.txt", col.names = c("activity_num"))
View(test_labels)
subject_test = read.table("test/subject_test.txt", col.names = c("subject"))
View(subject_test)
test_data = read.table("test/X_test.txt")
View(test_data)
names(test_data) = features$feature_label
## Load in the training data
train_labels = read.table("train/y_train.txt", col.names = "activity_num")
subject_train = read.table("train/subject_train.txt")
train_data = read.table("train/x_train.txt")
View(train_)
View(train_data)
names(train_data) = features$feature_label
## join subject_test, test_labels, and test_data. Do the same for the training data
test = cbind(subject_test, test_labels, test_data)
View(test)
View(subject_train)
View(train_labels)
View(train_data)
train = cbind(subject_train, train_labels, train_data)
View(train)
subject_train = read.table("train/subject_train.txt", col.names = "subject")
source("~/GitHub/Getting-and-Cleaning-Data-course-proj/run_analysis.R", echo=TRUE)
## join test data and train data into one data set
data = rbind(test, train)
View(data)
## extract only the measurements on the mean and standard deviation for each
## measurement
data = data %>% select(contains("mean"), contains("std"))
View(activities)
## Load libraries
library(dplyr)
library(tidyr)
library(stringr)
## Load in activities and feature data
activities = read.table("activity_labels.txt", col.names = c("activity_num", "activity_label"))
features = read.table("features.txt", col.names = c("feature_num", "feature_label"))
## load in test data
test_labels = read.table("test/y_test.txt", col.names = c("activity_num"))
subject_test = read.table("test/subject_test.txt", col.names = c("subject"))
test_data = read.table("test/X_test.txt")
names(test_data) = features$feature_label
## Load in the training data
train_labels = read.table("train/y_train.txt", col.names = "activity_num")
subject_train = read.table("train/subject_train.txt", col.names = "subject")
train_data = read.table("train/x_train.txt")
names(train_data) = features$feature_label
## join subject_test, test_labels, and test_data. Do the same for the training data
test = cbind(subject_test, test_labels, test_data)
train = cbind(subject_train, train_labels, train_data)
## join test data and train data into one data set
data = rbind(test, train)
## Load libraries
library(dplyr)
library(tidyr)
library(stringr)
## Load in activities and feature data
activities = read.table("activity_labels.txt", col.names = c("activity_num", "activity_label"))
features = read.table("features.txt", col.names = c("feature_num", "feature_label"))
## load in test data
test_labels = read.table("test/y_test.txt", col.names = c("activity_num"))
subject_test = read.table("test/subject_test.txt", col.names = c("subject"))
test_data = read.table("test/X_test.txt")
names(test_data) = features$feature_label
## Load in the training data
train_labels = read.table("train/y_train.txt", col.names = "activity_num")
subject_train = read.table("train/subject_train.txt", col.names = "subject")
train_data = read.table("train/x_train.txt")
names(train_data) = features$feature_label
## join subject_test, test_labels, and test_data. Do the same for the training data
test = cbind(subject_test, test_labels, test_data)
train = cbind(subject_train, train_labels, train_data)
## join test data and train data into one data set
data = rbind(test, train)
View(data)
## extract only the measurements on the mean and standard deviation for each
## measurement
data = data %>% select(subject, activity_num, contains("mean"), contains("std"))
?left_join
## Use descriptive activity names to name the activities in the data set. These
## come from the activities.txt file provided:
data = left_join(data, activities, by = join_by(activity_num))
head(data$activity_label)
?pivot_longer
## from data above, create a second, independent tidy data set with the average
## of each variable for each activity and each subject
tidy_data = pivot_longer(data,
cols = 3:ncol(data),
names_to = "measurement_type",
values_to = "value")
## from data above, create a second, independent tidy data set with the average
## of each variable for each activity and each subject
tidy_data = pivot_longer(data,
cols = 3:ncol(data) - 1,
names_to = "measurement_type",
values_to = "value")
View(tidy_data)
any(is.na(tidy_data))
tidy_summary = tidy_data %>%
group_by(subject, activity_label, measurement_type) %>%
summarise(
avg_val = mean(measurement_type)
)
?contains
## Load libraries
library(dplyr)
library(tidyr)
library(stringr)
## Load in activities and feature data
activities = read.table("activity_labels.txt", col.names = c("activity_num", "activity_label"))
features = read.table("features.txt", col.names = c("feature_num", "feature_label"))
## load in test data
test_labels = read.table("test/y_test.txt", col.names = c("activity_num"))
subject_test = read.table("test/subject_test.txt", col.names = c("subject"))
test_data = read.table("test/X_test.txt")
## label variables with appropriate variable names from features.txt
names(test_data) = features$feature_label
## Load in the training data
train_labels = read.table("train/y_train.txt", col.names = "activity_num")
subject_train = read.table("train/subject_train.txt", col.names = "subject")
train_data = read.table("train/x_train.txt")
## label variables with appropriate variable names from features.txt
names(train_data) = features$feature_label
## join subject_test, test_labels, and test_data. Do the same for the training data
test = cbind(subject_test, test_labels, test_data)
train = cbind(subject_train, train_labels, train_data)
## join test data and train data into one data set
data = rbind(test, train)
## extract only the measurements on the mean and standard deviation for each
## measurement
data = data %>% select(subject, activity_num, contains(c("mean", "std")))
## Use descriptive activity names to name the activities in the data set. These
## come from the activities.txt file provided:
data = left_join(data, activities, by = join_by(activity_num))
## from data above, create a second, independent tidy data set with the average
## of each variable for each activity and each subject
tidy_data = pivot_longer(data,
cols = contains(c("mean", "std")),
names_to = "measurement_type",
values_to = "value")
str_detect(tidy_data$measurement_type, "activity")
?any_of
?any
any(str_detect(tidy_data$measurement_type, "activity"))
tidy_summary = tidy_data %>%
group_by(subject, activity_label, measurement_type) %>%
summarise(
avg_val = mean(measurement_type)
)
?summarise
?summarize
tidy_summary = tidy_data %>%
group_by(subject, activity_label, measurement_type) %>%
dplyr::summarise(
avg_val = mean(value)
)
View(tidy_summary)
dim(features)
ncol(data) - 3
86*6
any(is.na(tidy_summary))
source("run_analysis.R")
View(tidy_summary)
?write.table
getwd()
write.table(tidy_summary, getwd(), row.names = FALSE)
write.table(tidy_summary, paste0(getwd(), "/tidy_summary.txt"), row.names = FALSE)
